package music;/** * The Functional Music project * @author Western State College, CIS412 class */public class ExpCall extends Exp {    public Exp fn;    public Exp arg;    public ExpCall(Exp fn, Exp arg) {        this.fn = fn;        this.arg = arg;    }    @Override    public boolean isCall() {        return true;    }    public boolean compareTo(ParsedObject p) {        if (!p.isExp()) {            return false;        }        Exp p1 = (Exp) p;        if (!p1.isCall()) {            return false;        }        ExpCall p2 = (ExpCall) p1;        return p2.fn.compareTo(fn) && p2.arg.compareTo(arg);    }    @Override    public Value eval(Env e) {        Value function = fn.eval(e);        if (!function.isFunc()) {            throw new ExecutionError("Not a function.");        }        ValFunc fnVal = (ValFunc) function;        Thunk t = new Thunk(e, arg);        Value res = fnVal.apply(t);        return res;    }    public String print() {        return fn.print() + "("+arg.print()+")";    }}